using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MasterFudge.Emulation.CPU
{
    // TODO: "undocumented" opcodes (Z80 tester will need them, some Game Gear games (ex. Gunstar Heroes) hit them too?)

    delegate void SimpleOpcodeDelegate(Z80 c);
    delegate void DDFDOpcodeDelegate(Z80 c, ref Register register);
    delegate void DDFDCBOpcodeDelegate(Z80 c, ref Register register, ushort address);

    public partial class Z80
    {
        private static void UnimplementedOpcodeMain(Z80 c)
        {
            throw new Exception(c.MakeUnimplementedOpcodeString(string.Empty, (ushort)(c.pc - 1)));
        }

        private static void UnimplementedOpcodeED(Z80 c)
        {
            throw new Exception(c.MakeUnimplementedOpcodeString("ED", (ushort)(c.pc - 2)));
        }

        private static void UnimplementedOpcodeCB(Z80 c)
        {
            throw new Exception(c.MakeUnimplementedOpcodeString("CB", (ushort)(c.pc - 2)));
        }

        private static void UnimplementedOpcodeDDFD(Z80 c, ref Register register)
        {
            throw new Exception(c.MakeUnimplementedOpcodeString("DD/FD", (ushort)(c.pc - 2)));
        }

        private static void UnimplementedOpcodeDDFDCB(Z80 c, ref Register register, ushort address)
        {
            throw new Exception(c.MakeUnimplementedOpcodeString("DD/FD CB", (ushort)(c.pc - 4)));
        }

        static SimpleOpcodeDelegate[] opcodeTable_Main = new SimpleOpcodeDelegate[]
        {
            /* 0x00 */
            new SimpleOpcodeDelegate((c) => { /* 00 - NOP */ }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate16(ref c.bc.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.bc.Word, c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Increment16(ref c.bc.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftAccumulatorCircular(); }),
            new SimpleOpcodeDelegate((c) => { c.ExchangeRegisters16(ref c.af, ref c.afShadow); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.bc.Word, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterFromMemory8(ref c.af.High, c.bc.Word, false); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement16(ref c.bc.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightAccumulatorCircular(); }),
            /* 0x10 */
            new SimpleOpcodeDelegate((c) => { c.DecrementJumpNonZero(); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate16(ref c.de.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.de.Word, c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Increment16(ref c.de.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftAccumulator(); }),
            new SimpleOpcodeDelegate((c) => { c.Jump8(); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.de.Word, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterFromMemory8(ref c.af.High, c.de.Word, false); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement16(ref c.de.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightAccumulator(); }),
            /* 0x20 */
            new SimpleOpcodeDelegate((c) => { c.JumpConditional8(!c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate16(ref c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), c.hl.Word); c.pc += 2; }),
            new SimpleOpcodeDelegate((c) => { c.Increment16(ref c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.DecimalAdjustAccumulator(); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional8(c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.hl.Word, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister16(ref c.hl.Word, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            new SimpleOpcodeDelegate((c) => { c.Decrement16(ref c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.af.High ^= 0xFF; c.SetFlag(Flags.N | Flags.H); }),
            /* 0x30 */
            new SimpleOpcodeDelegate((c) => { c.JumpConditional8(!c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate16(ref c.sp); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.memoryMapper.Read16(c.pc), c.af.High); c.pc += 2; }),
            new SimpleOpcodeDelegate((c) => { c.Increment16(ref c.sp); }),
            new SimpleOpcodeDelegate((c) => { c.IncrementMemory8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.DecrementMemory8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.SetFlag(Flags.C); c.ClearFlag(Flags.N | Flags.H); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional8(c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.sp, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterFromMemory8(ref c.af.High, c.memoryMapper.Read16(c.pc), false); c.pc += 2; }),
            new SimpleOpcodeDelegate((c) => { c.Decrement16(ref c.sp); }),
            new SimpleOpcodeDelegate((c) => { c.Increment8(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Decrement8(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegisterImmediate8(ref c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.ClearFlag(Flags.N); c.SetClearFlagConditional(Flags.C, !c.IsFlagSet(Flags.C)); }),
            /* 0x40 */
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.bc.High = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.High, c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.bc.Low = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.bc.Low, c.af.High, false); }),
            /* 0x50 */
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.de.High = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.High, c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.de.Low = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.de.Low, c.af.High, false); }),
            /* 0x60 */
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.hl.High = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.High, c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.hl.Low = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.hl.Low, c.af.High, false); }),
            /* 0x70 */
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.halted = true; }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory8(c.hl.Word, c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.af.High = c.memoryMapper.Read8(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.af.High, false); }),
            /* 0x80 */
            new SimpleOpcodeDelegate((c) => { c.Add8(c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.memoryMapper.Read8(c.hl.Word), false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.bc.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.bc.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.de.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.de.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.hl.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.hl.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.memoryMapper.Read8(c.hl.Word), true); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.af.High, true); }),
            /* 0x90 */
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.bc.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.bc.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.de.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.de.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.hl.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.hl.Low, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.memoryMapper.Read8(c.hl.Word), false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.af.High, false); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.bc.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.bc.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.de.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.de.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.hl.High, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.hl.Low, true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.memoryMapper.Read8(c.hl.Word), true); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.af.High, true); }),
            /* 0xA0 */
            new SimpleOpcodeDelegate((c) => { c.And8(c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.memoryMapper.Read8(c.hl.Word)); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.memoryMapper.Read8(c.hl.Word)); }),
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.af.High); }),
            /* 0xB0 */
            new SimpleOpcodeDelegate((c) => { c.Or8(c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.memoryMapper.Read8(c.hl.Word)); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.memoryMapper.Read8(c.hl.Word)); }),
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.af.High); }),
            /* 0xC0 */
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(!c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.Pop(ref c.bc); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(!c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(true); }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(!c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.Push(c.bc); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.memoryMapper.Read8(c.pc++), false); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0000); }),
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.Return(); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(c.IsFlagSet(Flags.Z)); }),
            UnimplementedOpcodeMain, /* CB - handled elsewhere */
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(c.IsFlagSet(Flags.Z)); }),
            new SimpleOpcodeDelegate((c) => { c.Call16(); }),
            new SimpleOpcodeDelegate((c) => { c.Add8(c.memoryMapper.Read8(c.pc++), true); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0008); }),
            /* 0xD0 */
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(!c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.Pop(ref c.de); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(!c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.memoryMapper.Read8(c.pc++), c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(!c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.Push(c.de); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.memoryMapper.Read8(c.pc++), false); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0010); }),
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.ExchangeRegisters16(ref c.bc, ref c.bcShadow); c.ExchangeRegisters16(ref c.de, ref c.deShadow); c.ExchangeRegisters16(ref c.hl, ref c.hlShadow); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(c.IsFlagSet(Flags.C)); }),
            new SimpleOpcodeDelegate((c) => { c.af.High = c.ioReadDelegate(c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(c.IsFlagSet(Flags.C)); }),
            UnimplementedOpcodeMain, /* DD - handled elsewhere */
            new SimpleOpcodeDelegate((c) => { c.Subtract8(c.memoryMapper.Read8(c.pc++), true); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0018); }),
            /* 0xE0 */
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(!c.IsFlagSet(Flags.PV)); }),
            new SimpleOpcodeDelegate((c) => { c.Pop(ref c.hl); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(!c.IsFlagSet(Flags.PV)); }),
            new SimpleOpcodeDelegate((c) => { c.ExchangeStackRegister16(ref c.hl); }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(!c.IsFlagSet(Flags.PV)); }),
            new SimpleOpcodeDelegate((c) => { c.Push(c.hl); }),
            new SimpleOpcodeDelegate((c) => { c.And8(c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0020); }),
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(c.IsFlagSet(Flags.PV)); }),
            new SimpleOpcodeDelegate((c) => { c.pc = c.hl.Word; }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(c.IsFlagSet(Flags.PV)); }),
            new SimpleOpcodeDelegate((c) => { c.ExchangeRegisters16(ref c.de, ref c.hl); }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(c.IsFlagSet(Flags.PV)); }),
            UnimplementedOpcodeMain, /* ED - handled elsewhere */
            new SimpleOpcodeDelegate((c) => { c.Xor8(c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0028); }),
            /* 0xF0 */
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(!c.IsFlagSet(Flags.S)); }),
            new SimpleOpcodeDelegate((c) => { c.Pop(ref c.af); }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(!c.IsFlagSet(Flags.S)); }),
            new SimpleOpcodeDelegate((c) => { c.IFF1 = c.iff2 = false; }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(!c.IsFlagSet(Flags.S)); }),
            new SimpleOpcodeDelegate((c) => { c.Push(c.af); }),
            new SimpleOpcodeDelegate((c) => { c.Or8(c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0030); }),
            new SimpleOpcodeDelegate((c) => { c.ReturnConditional(c.IsFlagSet(Flags.S)); }),
            new SimpleOpcodeDelegate((c) => { c.sp = c.hl.Word; }),
            new SimpleOpcodeDelegate((c) => { c.JumpConditional16(c.IsFlagSet(Flags.S)); }),
            new SimpleOpcodeDelegate((c) => { c.eiDelay = true; }),
            new SimpleOpcodeDelegate((c) => { c.CallConditional16(c.IsFlagSet(Flags.S)); }),
            UnimplementedOpcodeMain, /* FD - handled elsewhere */
            new SimpleOpcodeDelegate((c) => { c.Cp8(c.memoryMapper.Read8(c.pc++)); }),
            new SimpleOpcodeDelegate((c) => { c.Rst(0x0038); })
        };

        static SimpleOpcodeDelegate[] opcodeTable_ED = new SimpleOpcodeDelegate[]
        {
            /* 0x00 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0x10 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0x20 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0x30 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0x40 */
			new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.bc.High, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract16(ref c.hl, c.bc.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), c.bc.Word); c.pc += 2; }),
            new SimpleOpcodeDelegate((c) => { c.Negate(); }),
            new SimpleOpcodeDelegate((c) => { c.IFF1 = c.iff2; c.Return(); }),
            new SimpleOpcodeDelegate((c) => { c.InterruptMode = 0; }),
            new SimpleOpcodeDelegate((c) => { c.i = c.af.High; }),
            new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.bc.Low, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.bc.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister16(ref c.bc.Word, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            UnimplementedOpcodeED, /* 4C - undocumented */
            new SimpleOpcodeDelegate((c) => { c.Return(); c.IFF1 = c.iff2; }),
            UnimplementedOpcodeED, /* 4E - undocumented */
            new SimpleOpcodeDelegate((c) => { c.r = c.af.High; }),
            /* 0x50 */
			new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.de.High, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract16(ref c.hl, c.de.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), c.de.Word); c.pc += 2; }),
            UnimplementedOpcodeED, /* 54 - undocumented */
            UnimplementedOpcodeED, /* 55 - undocumented */
            new SimpleOpcodeDelegate((c) => { c.InterruptMode = 1; }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.i, true); }),
            new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.de.Low, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.de.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister16(ref c.de.Word, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            UnimplementedOpcodeED, /* 5C - undocumented */
            UnimplementedOpcodeED, /* 5D - undocumented */
            new SimpleOpcodeDelegate((c) => { c.InterruptMode = 2; }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister8(ref c.af.High, c.r, true); }),
            /* 0x60 */
            new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.hl.High, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract16(ref c.hl, c.hl.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), c.hl.Word); c.pc += 2; }),
            UnimplementedOpcodeED, /* 64 - undocumented */
            UnimplementedOpcodeED, /* 65 - undocumented */
            UnimplementedOpcodeED, /* 66 - undocumented */
            new SimpleOpcodeDelegate((c) => { c.RotateRight4B(); }),
            new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.hl.Low, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.hl.Word, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister16(ref c.hl.Word, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            UnimplementedOpcodeED, /* 6C - undocumented */
            UnimplementedOpcodeED, /* 6D - undocumented */
            UnimplementedOpcodeED, /* 6E - undocumented */
            new SimpleOpcodeDelegate((c) => { c.RotateLeft4B(); }),
            /* 0x70 */
            new SimpleOpcodeDelegate((c) => { /* XXX */ c.PortReadFlagsOnly(c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { /* XXX */ c.ioWriteDelegate(c.bc.Low, 0x00); }),
            new SimpleOpcodeDelegate((c) => { c.Subtract16(ref c.hl, c.sp, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), c.sp); c.pc += 2; }),
            UnimplementedOpcodeED, /* 74 - undocumented */
            UnimplementedOpcodeED, /* 75 - undocumented */
            UnimplementedOpcodeED, /* 76 - undocumented */
            UnimplementedOpcodeED, /* 77 - undocumented */
            new SimpleOpcodeDelegate((c) => { c.PortRead(ref c.af.High, c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ioWriteDelegate(c.bc.Low, c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.Add16(ref c.hl, c.sp, true); }),
            new SimpleOpcodeDelegate((c) => { c.LoadRegister16(ref c.sp, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            UnimplementedOpcodeED, /* 7C - undocumented */
            UnimplementedOpcodeED, /* 7D - undocumented */
            UnimplementedOpcodeED, /* 7E - undocumented */
            UnimplementedOpcodeED, /* 7F - undocumented */
            /* 0x80 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0x90 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0xA0 */
            new SimpleOpcodeDelegate((c) => { c.LoadIncrement(); }),
            new SimpleOpcodeDelegate((c) => { c.CompareIncrement(); }),
            new SimpleOpcodeDelegate((c) => { c.InputIncrement(); }),
            new SimpleOpcodeDelegate((c) => { c.OutputIncrement(); }),
            new SimpleOpcodeDelegate((c) => { /* A4 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* A5 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* A6 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* A7 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { c.LoadDecrement(); }),
            new SimpleOpcodeDelegate((c) => { c.CompareDecrement(); }),
            new SimpleOpcodeDelegate((c) => { c.InputDecrement(); }),
            new SimpleOpcodeDelegate((c) => { c.OutputDecrement(); }),
            new SimpleOpcodeDelegate((c) => { /* AC - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* AD - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* AE - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* AF - nothing */ }),
            /* 0xB0 */
            new SimpleOpcodeDelegate((c) => { c.LoadIncrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.CompareIncrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.InputIncrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.OutputIncrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { /* B4 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* B5 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* B6 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* B7 - nothing */ }),
            new SimpleOpcodeDelegate((c) => { c.LoadDecrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.CompareDecrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.InputDecrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { c.OutputDecrementRepeat(); }),
            new SimpleOpcodeDelegate((c) => { /* BC - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* BD - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* BE - nothing */ }),
            new SimpleOpcodeDelegate((c) => { /* BF - nothing */ }),
            /* 0xC0 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0xD0 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0xE0 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            /* 0xF0 */
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED,
            UnimplementedOpcodeED
        };

        static SimpleOpcodeDelegate[] opcodeTable_CB = new SimpleOpcodeDelegate[]
        {
            /* 0x00 */
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeftCircular(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRightCircular(ref c.af.High); }),
            /* 0x10 */
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.RotateLeft(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.RotateRight(ref c.af.High); }),
            /* 0x20 */
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftArithmetic(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightArithmetic(ref c.af.High); }),
            /* 0x30 */
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftLeftLogical(ref c.af.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.bc.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.bc.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.de.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.de.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.hl.High); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.hl.Low); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(c.hl.Word); }),
            new SimpleOpcodeDelegate((c) => { c.ShiftRightLogical(ref c.af.High); }),
            /* 0x40 */
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 1); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 1); }),
            /* 0x50 */
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 3); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 3); }),
            /* 0x60 */
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 5); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 5); }),
            /* 0x70 */
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.bc.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.de.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.hl.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.memoryMapper.Read8(c.hl.Word), 7); }),
            new SimpleOpcodeDelegate((c) => { c.TestBit(c.af.High, 7); }),
            /* 0x80 */
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 1); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 1); }),
            /* 0x90 */
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 3); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 3); }),
            /* 0xA0 */
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 5); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 5); }),
            /* 0xB0 */
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.bc.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.de.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.hl.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(c.hl.Word, 7); }),
            new SimpleOpcodeDelegate((c) => { c.ResetBit(ref c.af.High, 7); }),
            /* 0xC0 */
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 0); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 1); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 1); }),
            /* 0xD0 */
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 2); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 3); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 3); }),
            /* 0xE0 */
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 4); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 5); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 5); }),
            /* 0xF0 */
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 6); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.bc.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.de.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.High, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.hl.Low, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(c.hl.Word, 7); }),
            new SimpleOpcodeDelegate((c) => { c.SetBit(ref c.af.High, 7); }),
        };

        static DDFDOpcodeDelegate[] opcodeTable_DDFD = new DDFDOpcodeDelegate[]
        {
			/* 0x00 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add16(ref r, c.bc.Word, false); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0x10 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add16(ref r, c.de.Word, false); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0x20 */
			UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadRegisterImmediate16(ref r.Word); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory16(c.memoryMapper.Read16(c.pc), r.Word); c.pc += 2; }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Increment16(ref r.Word); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.Increment8(ref r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.Decrement8(ref r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ r.High = c.memoryMapper.Read8(c.pc++); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add16(ref r, r.Word, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadRegister16(ref r.Word, c.memoryMapper.Read16(c.memoryMapper.Read16(c.pc))); c.pc += 2; }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Decrement16(ref r.Word); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.Increment8(ref r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.Decrement8(ref r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ r.Low = c.memoryMapper.Read8(c.pc++); }),
            UnimplementedOpcodeDDFD,
			/* 0x30 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.IncrementMemory8(c.CalculateIXIYAddress(r)); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.DecrementMemory8(c.CalculateIXIYAddress(r)); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.memoryMapper.Read8(c.pc++)); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add16(ref r, c.sp, false); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0x40 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.bc.High, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.bc.High, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.bc.High = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.bc.Low, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.bc.Low, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.bc.Low = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            UnimplementedOpcodeDDFD,
			/* 0x50 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.de.High, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.de.High, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.de.High = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.de.Low, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.de.Low, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.de.Low = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            UnimplementedOpcodeDDFD,
			/* 0x60 */
			new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, c.bc.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, c.bc.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, c.de.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, c.de.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.hl.High = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.High, c.af.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, c.bc.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, c.bc.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, c.de.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, c.de.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.hl.Low = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref r.Low, c.af.High, false); }),
			/* 0x70 */
			new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.bc.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.bc.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.de.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.de.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.hl.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.hl.Low); }),
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.LoadMemory8(c.CalculateIXIYAddress(r), c.af.High); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.af.High, r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { /* XXX */ c.LoadRegister8(ref c.af.High, r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.af.High = c.memoryMapper.Read8(c.CalculateIXIYAddress(r)); }),
            UnimplementedOpcodeDDFD,
			/* 0x80 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r)), false); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(r.High, true); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(r.Low, true); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Add8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r)), true); }),
            UnimplementedOpcodeDDFD,
			/* 0x90 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(r.High, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(r.Low, false); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r)), false); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(r.High, true); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(r.Low, true); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Subtract8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r)), true); }),
            UnimplementedOpcodeDDFD,
			/* 0xA0 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.And8(r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.And8(r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.And8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r))); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Xor8(r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Xor8(r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Xor8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r))); }),
            UnimplementedOpcodeDDFD,
			/* 0xB0 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Or8(r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Or8(r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Or8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r))); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Cp8(r.High); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Cp8(r.Low); }),
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Cp8(c.memoryMapper.Read8(c.CalculateIXIYAddress(r))); }),
            UnimplementedOpcodeDDFD,
			/* 0xC0 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.ExecuteOpDDFDCB(c.memoryMapper.Read8((ushort)(c.pc + 1)), ref r); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0xD0 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0xE0 */
			UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Pop(ref r); }),
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.ExchangeStackRegister16(ref r); }),
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.Push(r); }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.pc = r.Word; }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
			/* 0xF0 */
			UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            new DDFDOpcodeDelegate((Z80 c, ref Register r) => { c.sp = r.Word; }),
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
            UnimplementedOpcodeDDFD,
        };

        static DDFDCBOpcodeDelegate[] opcodeTable_DDFDCB = new DDFDCBOpcodeDelegate[]
        {
			/* 0x00 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.RotateLeftCircular(address); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.RotateRightCircular(address); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x10 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.RotateLeft(address); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.RotateRight(address); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x20 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ShiftLeftArithmetic(address); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ShiftRightArithmetic(address); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x30 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ShiftLeftLogical(address); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ShiftRightLogical(address); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x40 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 0); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 1); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x50 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 2); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 3); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x60 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 4); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 5); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x70 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 6); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.TestBit(c.memoryMapper.Read8(address), 7); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x80 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 0); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 1); }),
            UnimplementedOpcodeDDFDCB,
			/* 0x90 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 2); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 3); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xA0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 4); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 5); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xB0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 6); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.ResetBit(address, 7); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xC0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 0); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 1); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xD0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 2); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 3); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xE0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 4); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 5); }),
            UnimplementedOpcodeDDFDCB,
			/* 0xF0 */
			UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 6); }),
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            UnimplementedOpcodeDDFDCB,
            new DDFDCBOpcodeDelegate((Z80 c, ref Register r, ushort address) => { c.SetBit(address, 7); }),
            UnimplementedOpcodeDDFDCB,
        };
    }
}
